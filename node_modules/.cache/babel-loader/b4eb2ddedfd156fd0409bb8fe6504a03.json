{"ast":null,"code":"var _s = $RefreshSig$();\n\nexport default function isOnScreen(ref) {\n  _s();\n\n  const [isIntersecting, setIntersecting] = useState(false);\n  const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\n  useEffect(() => {\n    observer.observe(ref.current); // Remove the observer as soon as the component is unmounted\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  return isIntersecting;\n}\n\n_s(isOnScreen, \"+TWZGT8mxcpNH+JS7IkSFv1hR0A=\");","map":{"version":3,"sources":["/Users/gagecates/coding/Portfolio/react-portfolio/portfolio/src/hooks/isOnScreen.js"],"names":["isOnScreen","ref","isIntersecting","setIntersecting","useState","observer","IntersectionObserver","entry","useEffect","observe","current","disconnect"],"mappings":";;AAAA,eAAe,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AAAA;;AAEtC,QAAM,CAACC,cAAD,EAAiBC,eAAjB,IAAoCC,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CACf,CAAC,CAACC,KAAD,CAAD,KAAaJ,eAAe,CAACI,KAAK,CAACL,cAAP,CADb,CAAjB;AAIAM,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,QAAQ,CAACI,OAAT,CAAiBR,GAAG,CAACS,OAArB,EADc,CAEd;;AACA,WAAO,MAAM;AAAEL,MAAAA,QAAQ,CAACM,UAAT;AAAuB,KAAtC;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOT,cAAP;AACD;;GAfuBF,U","sourcesContent":["export default function isOnScreen(ref) {\n\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  const observer = new IntersectionObserver(\n    ([entry]) => setIntersecting(entry.isIntersecting)\n  )\n\n  useEffect(() => {\n    observer.observe(ref.current)\n    // Remove the observer as soon as the component is unmounted\n    return () => { observer.disconnect() }\n  }, [])\n\n  return isIntersecting\n}"]},"metadata":{},"sourceType":"module"}