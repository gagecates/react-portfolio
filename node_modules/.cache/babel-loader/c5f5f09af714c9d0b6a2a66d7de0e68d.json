{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nexport default function IsOnScreen(ref) {\n  _s();\n\n  const [isIntersecting, setIntersecting] = useState(false);\n  const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\n  useEffect(() => {\n    observer.observe(ref.current); // Remove the observer as soon as the component is unmounted\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  return isIntersecting;\n}\n\n_s(IsOnScreen, \"+TWZGT8mxcpNH+JS7IkSFv1hR0A=\");\n\n_c = IsOnScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsOnScreen\");","map":{"version":3,"sources":["/Users/gagecates/coding/Portfolio/react-portfolio/portfolio/src/hooks/IsOnScreen.js"],"names":["React","useState","useEffect","IsOnScreen","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","current","disconnect"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAAA;;AAEtC,QAAM,CAACC,cAAD,EAAiBC,eAAjB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMM,QAAQ,GAAG,IAAIC,oBAAJ,CACf,CAAC,CAACC,KAAD,CAAD,KAAaH,eAAe,CAACG,KAAK,CAACJ,cAAP,CADb,CAAjB;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACG,OAAT,CAAiBN,GAAG,CAACO,OAArB,EADc,CAEd;;AACA,WAAO,MAAM;AAAEJ,MAAAA,QAAQ,CAACK,UAAT;AAAuB,KAAtC;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOP,cAAP;AACD;;GAfuBF,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nexport default function IsOnScreen(ref) {\n\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  const observer = new IntersectionObserver(\n    ([entry]) => setIntersecting(entry.isIntersecting)\n  )\n\n  useEffect(() => {\n    observer.observe(ref.current)\n    // Remove the observer as soon as the component is unmounted\n    return () => { observer.disconnect() }\n  }, [])\n\n  return isIntersecting\n}"]},"metadata":{},"sourceType":"module"}